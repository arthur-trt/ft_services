Sending build context to Docker daemon  11.78kB
Step 1/8 : FROM	alpine
 ---> b14afc6dfb98
Step 2/8 : RUN 	apk add nginx openrc openssl
 ---> Running in 7c1f728a2e5e
fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz
(1/4) Installing pcre (8.44-r0)
(2/4) Installing nginx (1.18.0-r1)
Executing nginx-1.18.0-r1.pre-install
(3/4) Installing openrc (0.42.1-r11)
Executing openrc-0.42.1-r11.post-install
(4/4) Installing openssl (1.1.1i-r0)
Executing busybox-1.31.1-r19.trigger
OK: 10 MiB in 18 packages
Removing intermediate container 7c1f728a2e5e
 ---> 16aa7c783b92
Step 3/8 : RUN		mkdir /run/nginx /www && 		chown -R nginx:nginx /www && 	 	openssl req -x509 -nodes -subj '/CN=localhost' -days 365 -newkey rsa:4096 		 -keyout /etc/ssl/private/server.key -out /etc/ssl/certs/server.crt
 ---> Running in 1a95f1d97bbd
[91mGenerating a RSA private key
.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.................................................[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m.[0m[91m....................................................++++
.....................++++
writing new private key to '/etc/ssl/private/server.key'
-----
[0mRemoving intermediate container 1a95f1d97bbd
 ---> 7df05932d167
Step 4/8 : ADD		srcs/nginx.conf /etc/nginx/
 ---> 705fe52f004c
Step 5/8 : ADD		srcs/index.html	/www/
 ---> 27a9daa9d153
Step 6/8 : ADD		srcs/launch.sh .
 ---> 8baea56fe7b3
Step 7/8 : EXPOSE	80 443
 ---> Running in 3b44a34fa79b
Removing intermediate container 3b44a34fa79b
 ---> 18a01929d1d9
Step 8/8 : CMD		[ "/bin/ash", "launch.sh" ]
 ---> Running in 7d38f16eb94a
Removing intermediate container 7d38f16eb94a
 ---> 7ba9ecb7ad6a
Successfully built 7ba9ecb7ad6a
Successfully tagged nginx-image:latest
